@page "/search"

<div class="search-main-content">

    <div>
        <div class="user-profile-icon">
            <i class="bi bi-person-circle"></i>
        </div>
    </div>

    <div class="search-and-filters-area">

        <div class="search-input-container">
            <input type="text"
                   class="search-input"
                   placeholder="Cerca la tua musica preferita..."
                   @bind="SearchTerm"
                   @bind:event="oninput"
                   @onchange="ApplyFiltersAndSearch" />
        </div>

        <div class="filters-container">
            <select class="filter-dropdown" @bind="SelectedGenre">
                <option value="">Genere</option>
                @foreach (var genre in GenresGrid)
                {
                    <option value="@genre.Name">@genre.Name</option>
                }
            </select>

            <select class="filter-dropdown" @bind="SelectedSubgenre">
                <option value="">Sottogenere</option>
                @foreach (var subgenre in Subgenres)
                {
                    <option value="@subgenre">@subgenre</option>
                }
            </select>
        </div>

    </div>

    <h2 class="section-title">Sfoglia tutto</h2>

    <div class="genres-grid-container">
        @foreach (var genre in GenresGrid)
        {
            <div class="genre-card @genre.ColorClass" @onclick="() => SelectGenre(genre)">
                <h3 class="genre-title">@genre.Name</h3>
                <img class="genre-image" src="@genre.Image" alt="@genre.Name" />
            </div>
        }
    </div>

    <div class="search-results-list">
        <!-- Risultati della ricerca -->
    </div>

</div>

@code {
    [Inject]
    public NavigationManager NavManager { get; set; }

    private string SearchTerm { get; set; } = string.Empty;
    private string SelectedGenre { get; set; } = string.Empty;
    private string SelectedSubgenre { get; set; } = string.Empty;

    private List<string> Subgenres { get; set; } = new()
    {
        "Dance Pop","Post-Teen Pop","Electropop","Indie Poptimism",
        "Hip Hop","Southern Hip Hop","Gangster Rap","Trap",
        "Album Rock","Classic Rock","Permanent Wave","Hard Rock",
        "Tropical","Latin Pop","Reggaeton","Latin Hip Hop",
        "Urban Contemporary","Hip Pop","New Jack Swing","Neo Soul",
        "Electro House","Big Room","Pop Edm","Progressive Electro House"
    };

    public class Genre
    {
        public string Name { get; set; }
        public string Image { get; set; }
        public string ColorClass { get; set; }
    }

    private List<Genre> GenresGrid = new()
    {
        new Genre { Name = "Pop", Image = "/images/pop.jpg", ColorClass = "pop-gradient" },
        new Genre { Name = "Rap", Image = "/images/rap.jpg", ColorClass = "rap-gradient" },
        new Genre { Name = "Rock", Image = "/images/rock.jpg", ColorClass = "rock-gradient" },
        new Genre { Name = "Latin", Image = "/images/latin.jpg", ColorClass = "latin-gradient" },
        new Genre { Name = "R&B", Image = "/images/r&b.jpg", ColorClass = "rnb-gradient" },
        new Genre { Name = "EDM", Image = "/images/edm.jpg", ColorClass = "edm-gradient" }
    };

    private void SelectGenre(Genre genre)
    {
        Console.WriteLine($"Card Genere selezionata: {genre.Name}");
    }

    private void ApplyFiltersAndSearch()
    {
        Console.WriteLine($"Ricerca con filtri: Termine='{SearchTerm}', Genere='{SelectedGenre}', Sottogenere='{SelectedSubgenre}'");
    }
}

<style>
.search-input-container {
  padding: 10px 30px;
}

.search-input {
  width: 350px;
  padding: 10px 15px;
  border-radius: 25px;
  border: none;
  background-color: #242424;
  color: white;
  box-shadow: none;
}

.filters-container {
  display: flex;
  gap: 10px;
  padding: 10px 30px;
}

.filter-dropdown {
  padding: 8px 15px;
  border-radius: 20px;
  background-color: #242424;
  color: white;
  border: 1px solid #333;
  cursor: pointer;
  appearance: none;
  background-repeat: no-repeat;
  background-position: right 10px center;
  padding-right: 30px;
}

.section-title {
  color: white;
  font-size: 24px;
  font-weight: bold;
  padding: 0 30px;
  margin-bottom: 20px;
}

.genres-grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
  gap: 20px;
  padding: 0 30px;
}

.genre-card {
  position: relative;
  height: 180px;
  border-radius: 8px;
  overflow: hidden;
  cursor: pointer;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
  transition: transform 0.2s ease-in-out;
  padding: 15px;
  transform: rotateZ(0deg);
}

.genre-card:hover {
  transform: scale(1.03);
}

.genre-card .genre-title {
  font-size: 24px;
  font-weight: bold;
  color: white;
  z-index: 2;
  margin-bottom: 10px;
  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
}

.genre-card .genre-image {
  position: absolute;
  bottom: 0;
  right: 0;
  width: 90px;
  height: 90px;
  object-fit: cover;
  border-radius: 4px;
  transform: rotateZ(25deg) translate(10px, 10px);
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.4);
  z-index: 1;
}

.pop-gradient {
  background: linear-gradient(135deg, #ff69b4, #8a2be2);
}

.rap-gradient {
  background: linear-gradient(135deg, #00ff7f, #008000);
}

.rock-gradient {
  background: linear-gradient(135deg, #ff4500, #8b0000);
}

.latin-gradient {
  background: linear-gradient(135deg, #ffd700, #daa520);
}

.rnb-gradient {
  background: linear-gradient(135deg, #800080, #ff00ff);
}

.edm-gradient {
  background: linear-gradient(135deg, #00bfff, #1e90ff);
}
</style>

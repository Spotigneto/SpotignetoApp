@page "/register"
@inject HttpClient Http

<style>
    .register-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.65);
        backdrop-filter: blur(10px);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        z-index: 10000;
        color: white;
        font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    }

    .register-card {
        background-color: rgba(18, 18, 18, 0.9);
        border-radius: 16px;
        padding: 2.5rem 3rem;
        box-shadow: 0 0 40px rgba(0, 0, 0, 0.5);
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
    }

    .close-button {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: transparent;
        border: none;
        color: #b3b3b3;
        font-size: 1.5rem;
        cursor: pointer;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        transition: all 0.2s ease;
        padding: 0;
        z-index: 10;
        text-decoration: none;
    }

    .close-button:hover {
        background-color: rgba(255, 255, 255, 0.1);
        color: white;
    }

    .register-icon {
        background-color: #1db954;
        color: black;
        border-radius: 50%;
        width: 85px;
        height: 85px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        margin-bottom: 1.5rem;
    }

    h1 {
        font-size: 2.4rem;
        margin-bottom: 0.4rem;
        text-align: center;
    }

    p {
        color: #b3b3b3;
        margin-bottom: 2.2rem;
        text-align: center;
    }

    form {
        width: 330px;
        display: flex;
        flex-direction: column;
    }

    label {
        text-align: left;
        font-weight: 500;
        margin-bottom: 0.3rem;
    }

    input[type="text"], input[type="email"], input[type="password"] {
        background-color: #2a2a2a;
        border: none;
        border-radius: 8px;
        padding: 0.9rem;
        margin-bottom: 1.2rem;
        color: white;
        font-size: 1rem;
        outline: none;
    }

    input::placeholder {
        color: #888;
    }

    .terms {
        color: #b3b3b3;
        font-size: 0.9rem;
        text-align: left;
        margin-bottom: 1.5rem;
    }

    .terms a {
        color: #1db954;
        text-decoration: none;
    }

    button {
        background-color: #1db954;
        border: none;
        color: black;
        font-weight: bold;
        font-size: 1rem;
        padding: 0.9rem;
        border-radius: 40px;
        cursor: pointer;
        transition: background 0.3s ease;
    }

    button:hover {
        background-color: #1ed760;
    }

    .login-link {
        text-align: center;
        margin-top: 1.5rem;
        color: #b3b3b3;
    }

    .login-link a {
        color: #1db954;
        text-decoration: none;
        font-weight: 500;
    }

    .login-link a:hover {
        text-decoration: underline;
    }
</style>

<style>
    /* Custom Checkbox Styles (same as Playlist) */
    .checkbox-container {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-top: 4px;
    }

    .custom-checkbox {
        appearance: none;
        width: 18px;
        height: 18px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 4px;
        background: rgba(255, 255, 255, 0.1);
        cursor: pointer;
        position: relative;
        transition: all 0.2s ease;
    }

    .custom-checkbox:hover {
        border-color: rgba(255, 255, 255, 0.5);
        background: rgba(255, 255, 255, 0.15);
    }

    .custom-checkbox:checked {
        background: #1db954;
        border-color: #1db954;
    }

    .custom-checkbox:checked::after {
        content: 'âœ“';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: #000;
        font-size: 12px;
        font-weight: bold;
    }

    .checkbox-label {
        font-size: 13px;
        color: #b3b3b3;
        cursor: pointer;
        user-select: none;
        transition: color 0.2s ease;
    }

    .checkbox-label:hover {
        color: #fff;
    }
</style>

<div class="register-overlay">
    <div class="register-card">
        <a href="/" class="close-button">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
        </a>

        <div class="register-icon">ðŸŽµ</div>
        <h1>Sign up for free</h1>
        <p>Create your account to get started</p>

        <form>
            <label>Username</label>
            <input type="text" placeholder="Choose a username" @bind="username" />

            <div class="checkbox-container">
                <input type="checkbox" @bind="isArtista" id="artist-checkbox" class="custom-checkbox" />
                <label for="artist-checkbox" class="checkbox-label">Spunta per registrarti come Artista</label>
            </div>

            <button type="button" @onclick="OnSubmit">Sign Up</button>

            <div class="login-link">
                Already have an account? <a href="/login">Log in here</a>
            </div>
        </form>
</div>
</div>

@code {
    private string username = string.Empty;
    private bool isArtista = false;

    private async Task OnSubmit()
    {
        var nome = (username ?? string.Empty).Trim();
        if (string.IsNullOrWhiteSpace(nome))
        {
            return;
        }

        var payload = new { Nome = nome };
        var json = System.Text.Json.JsonSerializer.Serialize(payload, new System.Text.Json.JsonSerializerOptions
        {
            PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase
        });
        using var content = new System.Net.Http.StringContent(json, System.Text.Encoding.UTF8, "application/json");

        if (isArtista)
        {
            await Http.PostAsync("api/Artista", content);
        }
        else
        {
            await Http.PostAsync("api/Profile", content);
        }
    }
}
